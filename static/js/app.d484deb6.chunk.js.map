{"version":3,"sources":["assets/images/drawer_pic.png","assets/images/github.png","assets/images/mypic.jpeg","Screens/MDs/About.md","assets/images/twitter.png","assets/images/mail.png","assets/images/stack.png","assets/images/linkedin.png","assets/images/spotify.png","assets/fonts/Ubuntu-Regular.ttf","theme/Colors.js","components/RootNavigation.js","components/HoverState.js","components/Hoverable.js","env.js","components/Text.js","components/ImageButton.js","components/Svgs.js","components/Appbar.js","components/Footer.js","Stores/RootStore.js","Screens/Home.js","Screens/About.js","Screens/Skills.js","Screens/Publications.js","Screens/Contact.js","App.js","index.js"],"names":["module","exports","colors","isReadyRef","React","navigationRef","toggleDrawer","current","dispatch","DrawerActions","rootStore","drawerType","toggleDrawerType","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","Date","now","document","addEventListener","Hoverable","onHoverIn","onHoverOut","children","useState","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","displayName","propTypes","oneOfType","func","element","window","Dimensions","get","RootStoreContext","createContext","generalStyles","StyleSheet","create","scrollView","flexGrow","screenContainer","flex","margin","border","borderRadius","padding","minHeight","justifyContent","require","screens","SText","props","stylesArray","fontFamily","style","Text","defaultProps","link","linkColor","StyledMD","rules","node","parent","styles","key","hover","href","attributes","backgroundColor","theme","linkActive","accessibilityRole","heading1","View","borderLeftWidth","borderLeftColor","headings","heading2","marginBottom","markDownStyles","body","fontSize","lineHeight","color","primaryTextColor","em","fontWeight","heading3","hr","mergeStyle","ImageButton","TouchableHighlight","alignItems","underlayColor","disabled","onPress","onPressHandler","accessibilityLabel","flexDirection","borderColor","viewStyle","buttImage","Image","source","width","height","resizeMode","resizeMethod","buttText","SvgStyles","container","aspectRatio","DropDownIndicator","pointYsDown","pointYsUp","currentYs","opened","useEffect","console","log","viewBox","d","stroke","secondaryTextColor","strokeWidth","fill","PinSvg","accessible","pinned","Logo","marginLeft","name","navigate","params","id","transform","strokeLinecap","strokeLinejoin","Sun","r","s","l","c","Math","sqrt","cx","cy","toString","Moon","Magnifier","strokeColor","active","Menu","highlight","setHighlight","Pressable","onPressIn","onPressOut","fillAreaColor","primary","Appbar","useContext","borderBottomColor","borderBottomWidth","maxHeight","toggleColor","Footer","date","info","borderTopColor","borderTopWidth","getFullYear","flexWrap","Platform","OS","open","lastModifiedDate","RootStore","types","model","navStack","string","number","union","literal","keyboardHidden","boolean","actions","self","setNavStack","screen","setDrawerType","type","setDims","setKeyboardState","state","keyboardState","views","env","HomeHeaderMD","domain","Home","observer","navigation","ScrollView","contentInsetAdjustmentBehavior","contentContainerStyle","alignSelf","portrait","paddingRight","paddingTop","paddingLeft","borderTopRightRadius","About","aboutMD","text1","setText1","fetch","then","res","text","ActivityIndicator","parsedData","data","arrayLike","sections","Object","keys","sectionIdx","newSection","title","dataArray","skills","skillIdx","dataObject","push","parseDataToArrayLike","freshness","level","addInfo","SkillCard","SectionContainer","setOpened","setOpenedCallBack","useCallback","val","pressHandler","marginTop","map","item","_renderItem","Skills","FlatList","renderItem","keyExtractor","them","PublicationArray","pdf","bib","description","videoSource","SearchBar","textInputRef","useRef","focus","borderWidth","pointerEvents","TextInput","ref","placeholder","placeholderTextColor","PublicationCard","isOpened","setIsOpened","video","paddingBottom","Video","useNativeControls","isLooping","onError","err","error","vids","Publications","ContactMethod","icon","role","ContactItem","pressedIn","setPressedIn","tintColor","Contact","Drawer","createDrawerNavigator","DrawerContent","DrawerContentScrollView","DrawerItem","label","focused","DrawerItemList","DrawerNav","Navigator","initialRouteName","screenOptions","background","secondaryFillAreaColor","drawerStyle","drawerLabelStyle","headerShown","drawerActiveBackgroundColor","drawerActiveColor","drawerInactiveBackgroundColor","drawerInactiveColor","drawerContent","Screen","component","App","loadingDone","setLoadingDone","navTheme","DefaultTheme","primaryContrastTextColor","card","Provider","value","NavigationContainer","linking","config","onReady","StatusBar","size","startAsync","a","async","Promise","all","Asset","loadAsync","Font","Ubuntu","onFinish","registerRootComponent"],"mappings":"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","file":"static/js/app.d484deb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drawer_pic.44dcf537.png\";","module.exports = __webpack_public_path__ + \"static/media/github.f71ddf10.png\";","module.exports = __webpack_public_path__ + \"static/media/mypic.5d5e0e50.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/About.ea184aca.md\";","module.exports = __webpack_public_path__ + \"static/media/twitter.ec6ff573.png\";","module.exports = __webpack_public_path__ + \"static/media/mail.f210192d.png\";","module.exports = __webpack_public_path__ + \"static/media/stack.eb6f8dfd.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.ddc52ca7.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.87e32461.png\";","module.exports = __webpack_public_path__ + \"./fonts/Ubuntu-Regular.ttf\";","export const colors = {\n    'light': {\n        'primary' : '#12516e', \n        'secondary' : '#4388a8', \n        'primaryTextColor': '#515151',\n        'secondaryTextColor': '#676767',\n        'primaryContrastTextColor': '#eaeaea',\n        'secondaryContrastTextColor': '#eeeeee',\n        'fillAreaColor': '#fafafa', \n        'disabled': '#e3e3e3',\n        'secondaryFillAreaColor': '#dfdfdf',\n        'border': '#aeaeae',\n        'link': \"#cce7ee\",\n        'linkActive': '#ddf8ff',\n        'drawerActiveColor': \"#d6edff\",\n        'drawerInactiveColor': \"#ebebeb\"\n    },\n    'dark': {\n        'primary' : '#12516e',\n        'secondary' : '#4388a8',\n        'primaryTextColor': '#e2e2e2',\n        'secondaryTextColor': '#eeeeee',\n        'primaryContrastTextColor': '#eaeaea',\n        'secondaryContrastTextColor': '#eeeeee',\n        'fillAreaColor': '#6a6a6a', \n        'disabled': '#747474',\n        'secondaryFillAreaColor': '#575757',\n        'border': '#eaeaea',\n        'link': \"#4388a8\",\n        'linkActive': \"#327797\",\n        'drawerActiveColor': \"#88a2bb\",\n        'drawerInactiveColor': \"#aeaeae\"\n    }\n}","import * as React from 'react';\nimport {DrawerActions} from \"@react-navigation/native\" ; \nimport { rootStore } from '../App';\n\nexport const isReadyRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isReadyRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n    // You can decide what to do if the app hasn't mounted\n    // You can ignore this, or add these actions to a queue you can call later\n  }\n}\n\nexport function toggleDrawer(){\n    if(isReadyRef.current && navigationRef.current) {\n        navigationRef.current.dispatch(DrawerActions.toggleDrawer()) ;\n        if(rootStore.drawerType == 'permanent'){\n            rootStore.toggleDrawerType() ; \n        }\n    } else {\n        \n    }\n}\n\nexport function setDrawerType(){\n    if(isReadyRef.current && navigationRef.current){\n\n    }else{\n\n    }\n}","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","//\n//  Credits to https://codesandbox.io/s/react-native-hover-hooks-version-4oxpp?file=/src/Hoverable.js\n//\n\nimport { isHoverEnabled } from \"./HoverState\";\nimport { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {\n\n  }\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    //onPressIn: handleGrant,\n    //onPressOut: handleRelease\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func\n};\n","import React from \"react\" ; \nimport {Dimensions, StyleSheet} from \"react-native\" ;  \n\nexport const window = Dimensions.get('window') ; \nexport const screen = Dimensions.get('screen') ; \n\nexport const RootStoreContext = React.createContext(null) ; \n\nexport const generalStyles = StyleSheet.create({\n    scrollView: {\n        flexGrow: 1,\n    },  \n    screenContainer: {\n        flex: 1,\n        margin: 10,\n        border: 10,\n        borderRadius: 5,\n        padding: 10,\n        minHeight: \"100%\",\n        justifyContent: \"flex-start\"\n    }\n})\n\nexport const screenLinks = require(\"./env.json\").screens ; \n","import {View, Text, StyleSheet, Pressable} from \"react-native\" ; \nimport React from \"react\" ; \nimport Markdown, {} from \"react-native-markdown-display\" ; \nimport {colors} from \"../theme/Colors\" ; \nimport { useContext } from \"react\";\nimport Hoverable from \"./Hoverable\";\nimport {RootStoreContext} from \"../env\" ; \nimport observer from \"mobx-react-lite\" ;    \n\n// Make sure to feed it Stylesheet type props\nexport const SText = (props) => {\n    \n    const stylesArray = [{fontFamily: 'Ubuntu'}, props.style] ; \n    // if(props.url != \"none\"){\n    //     stylesArray.push({\n    //         backgroundColor: props.linkColor\n    //     }) ; \n    // }\n\n    return (\n    <Text style={stylesArray}>\n        {props.children}\n    </Text>\n    )\n}\n\nSText.defaultProps = { \n    link: \"none\" ,\n    linkColor: \"#cce7ff\"\n}\n\n\n\nexport const StyledMD = (props) => {\n\n    const rules = {\n        link: (node, children, parent, styles) => (\n            // <Pressable\n            //     onPress={()=>{\n                    \n            //     }}\n            // >\n            <Hoverable key={node.key}> \n                { hover => (\n                <Text  href={node.attributes.href} style={[styles.link, hover && {backgroundColor: colors[props.theme].linkActive} ] } accessibilityRole=\"link\">\n                    {children}\n                </Text> \n                )}\n            </Hoverable>\n            // </Pressable>\n        )\n        ,\n        heading1: (node, children, parent, styles) => (\n            <Hoverable key={node.key}>\n                { hover => (\n                <View \n                    style=\n                    {[hover && {\n                        borderLeftWidth: 3,\n                        borderLeftColor: colors[props.theme].border,\n                    }]}>\n                    <Text style={[styles.headings, styles.heading1]}>\n                        {children} \n                    </Text>\n                    {\n                        // hover ? <View style={{position: 'absolute', }}> \n                        //     <Text>\n                        //         Test\n                        //     </Text>\n                        // </View> : null \n                    }\n                </View>\n                )\n                } \n            </Hoverable>\n        ),\n        heading2: (node, children, parent, styles) => (\n            <Hoverable key={node.key}>\n                { hover => (\n                <View \n                    style=\n                    {[hover && {\n                        borderLeftWidth: 2,\n                        borderLeftColor: colors[props.theme].border,\n                    }, {\n                        marginBottom: 5,\n                    }]}>\n                    <Text style={[styles.heading2, {\n                        \n                    }]}>\n                        {children} \n                    </Text>\n                    {\n                        // hover ? <View style={{position: 'absolute', }}> \n                        //     <Text>\n                        //         Test\n                        //     </Text>\n                        // </View> : null \n                    }\n                </View>\n                )\n                } \n            </Hoverable>),\n    \n    }\n\n    const markDownStyles = StyleSheet.create({\n        link: {\n            fontFamily: 'Ubuntu',\n            backgroundColor: colors[props.theme].link,\n        },\n        body: {\n            fontFamily: 'Ubuntu',\n            fontSize: 15,\n            lineHeight: 25,\n            color: colors[props.theme].primaryTextColor,\n        },\n        em :{\n            fontFamily: 'Ubuntu',\n            color: colors[props.theme].primaryTextColor,\n        },\n        headings: {\n            fontFamily: 'Ubuntu',\n            fontWeight: '800',\n            color: colors[props.theme].primaryTextColor,\n        },\n        heading2: {\n            fontWeight: '700',\n        },\n        heading3: {\n            fontWeight: '600',\n        },\n        hr: {\n            //color: colors[props.theme].primaryTextColor,\n            backgroundColor: colors[props.theme].primaryTextColor, \n        }\n    })\n    \n\n    return (\n        <Markdown \n            style={markDownStyles}\n            mergeStyle={true}\n            rules={rules} \n            >\n                {props.children} \n        </Markdown>\n    )\n}; \n","import { PropTypes } from \"mobx-react\";\nimport React from \"react\" ; \nimport {TouchableHighlight, Image, Text, View, TextPropTypes} from \"react-native\" ;\nimport {SText} from \"../components/Text\" ; \nimport {colors} from \"../theme/Colors\" ; \n\n\nexport const ImageButton = (props) => {\n\n    return <TouchableHighlight style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n     }}\n     underlayColor = {colors['light'].border}\n     disabled = {props.disabled}  \n     onPress={() => props.onPressHandler()} \n     accessibilityRole={props.accessibilityRole}\n     accessibilityLabel={props.accessibilityLabel}\n    >\n        <View style={[{\n            flexDirection: 'row',\n            backgroundColor: props.backgroundColor,\n            borderRadius: 3,\n            padding: 5,\n            borderColor: props.disabled ? colors[props.theme].disabled : colors[props.theme].primaryTextColor,\n        }, {...props.viewStyle}]}>\n\n            {props.buttImage != \"none\" ? \n                <Image source={props.buttImage} style={{width:props.width, height:props.height}} resizeMode=\"contain\" resizeMethod=\"resize\"/> :\n            null\n            }\n\n            {props.buttText != \"none\" ? \n                <SText style={{\n                    color: props.disabled ? colors[props.theme].disabled : colors[props.theme].primaryTextColor,\n                }}>\n                    {props.buttText}\n                </SText> : \n            null}\n\n        </View>\n    </TouchableHighlight>\n}\n\nImageButton.defaultProps = {\n    buttText: \"none\",\n    buttImage: \"none\",\n    disabled: false,\n    theme: 'light',\n    width: 30,\n    height: 30,\n}\n\n\n","import {Svg, Path, Circle, } from \"react-native-svg\" ;\nimport {TouchableHighlight, View, StyleSheet, Pressable} from \"react-native\" ; \nimport React, {useEffect, useContext, useState} from \"react\" ; \nimport {colors} from \"../theme/Colors\" ; \nimport {RootStoreContext} from \"../env\" ;\nimport Hoverable from \"./Hoverable\" ;\nimport {navigate} from \"../components/RootNavigation\" ;\n\n\nconst SvgStyles = StyleSheet.create({\n    container: {\n        aspectRatio: 1,\n    }\n}) ; \n\nexport const DropDownIndicator = (props)=> {\n    const pointYsDown = [30, 120, 30] ;\n    const pointYsUp   = [70, -20, 70] ;  \n    var currentYs = props.opened ? pointYsUp : pointYsDown ;\n\n    useEffect(()=>{\n        currentYs = props.opened ? pointYsUp :  pointYsDown ; \n        console.log(currentYs) ; \n    }, [props.opened]) ;\n\n    // useEffect(()=> {\n    //     console.log(props.showHover) ; \n    // }, [props.showHover])\n\n    return (\n        <View style={{\n            aspectRatio: 1,\n            height: props.height,\n            width: props.height,\n        }} >\n            <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n            <Path \n                d = {`M 10 ${currentYs[0]} Q 50 ${currentYs[1]} 90 ${currentYs[2]}`}\n                stroke= {colors[props.theme].secondaryTextColor}\n                strokeWidth= \"10\" \n                fill=\"none\"\n            />\n            </Svg>\n        </View>\n    )\n};\n\nDropDownIndicator.defaultProps = {\n    underlayColor: \"#eaeaeaff\",\n    theme: 'light',\n}\n\nconst NavPic = ({state}) => {\n    switch(state){ \n        case 0: return <PinSvg/> ;\n        case 1: return <PinSvg/> //L\n        case 2: return <PinSvg/> //P\n        case 3: return <PinSvg/> //P\n    }\n}\n\nexport const PinSvg = (props) => {\n\n    return (\n        <Hoverable accessible={true}>\n        {hover => (\n            <View accessible={false} style={{\n                aspectRatio: 1,\n                height: props.height,\n                width: props.width,\n            }}>\n                <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                    <Path \n                        d = 'M 10 90 L 42.5 42.5 L 30 30 Q 60 40 50 20 Q 100 0 80 50 Q 60 40 70 70 L 57.5 57.5 L 10 90' strokeWidth=\"5\" stroke={colors[props.theme].primaryTextColor} fill=\"none\"\n                    /> \n                    {\n                        props.pinned ? \n                        <Path d = 'M 35 5 L 65 95' strokeWidth=\"10\" stroke={colors[props.theme].primaryTextColor} fill=\"none\"/>\n                        : null\n                    }\n                </Svg>\n            </View>\n            )\n        }  \n        </Hoverable>\n    )\n}\n\nexport const NavButton = (props) => {\n    const rootStore = useContext(RootStoreContext) ; \n    const isPinned = useState(false) ; \n\n    return ( <TouchableHighlight >\n            <View style={{\n                aspectRatio: 1,\n                height: props.height,\n                width: props.width\n            }}>\n\n                <NavPic state={(rootStore.portrait << 1) + (isPinned & 1)} /> \n\n            </View>\n        </TouchableHighlight>\n    )\n}\n\nexport const Logo = (props) => {\n    return (\n    <View style={{\n        aspectRatio: 1,\n        height: props.height,\n        width: props.width,\n        marginLeft: 30,\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}>\n        <TouchableHighlight onPress={()=> navigate(\"Home\")} underlayColor={\"#eaeaeaff\"}>\n        <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1045.44 864\">\n            <Path id=\"shape0\" transform=\"matrix(1.62119053092193 0 0 1.49634761278181 761.462558801524 183.595816697935)\" fill=\"none\" stroke=\"#12516e\" strokeWidth=\"40\" strokeLinecap=\"square\" strokeLinejoin=\"bevel\" d=\"M82.7894 317.095C93.8061 294.675 77.0011 330.095 73.9071 334.417C55.5355 353.225 30.3419 365.766 5.51291 321.907C-0.779074 305.128 2.24221 321.012 0.541068 293.915C-6.0489 188.947 49.7671 -6.28472 48.0611 0.155455\"/><Path id=\"shape1\" transform=\"matrix(1.62119053092193 0 0 1.49634761278181 642.427380629087 502.460145282227)\" fill=\"none\" stroke=\"#12516e\" strokeWidth=\"40\" strokeLinecap=\"square\" strokeLinejoin=\"bevel\" d=\"M134.896 3.9161C141.147 -15.2381 129.62 40.327 81.6022 74.1672C21.8535 116.274 -15.2865 128.474 6.10209 118.435\"/><Path id=\"shape2\" transform=\"matrix(1.62119053092193 0 0 1.49634761278181 130.137648488796 89.9829296490907)\" fill=\"none\" stroke=\"#12516e\" strokeWidth=\"40\" strokeLinecap=\"square\" strokeLinejoin=\"bevel\" d=\"M491.307 143.401C515.326 111.685 394.111 271.892 317.435 323.118C239.258 375.192 83.376 428.384 24.3169 320.953C0.165792 277.021 -0.910807 216.557 0.334557 167.94C2.25792 92.8552 29.5713 -18.6459 24.9831 2.65785\"/>\n        </Svg>\n        </TouchableHighlight>\n    </View>)\n}\n\nexport const Sun = (props) => {\n\n    const r = 20 ;\n    const s = 10 ; \n    const l = 15 ;\n    const c = Math.sqrt(2)/2 ; \n\n\n    return (\n        <View style={[SvgStyles.container, {height: props.height, width: props.width}]}>\n            <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                        <Circle \n                            cx=\"50\"\n                            cy=\"50\" \n                            r= {r.toString()}\n                            strokeWidth=\"5\" \n                            stroke=\"#343434\"\n                            fill={props.fill ? \"#ffee44\" : \"none\"}\n                        />\n                        <Path d={`M 50 ${50-r-s} L 50 ${50-r-s-l} M ${50+c*r + c*s}  ${50-c*r-c*s} l ${c*l} ${-c*l} M ${50+r+s} ${50} l ${l} ${0} M ${50+ c*r + c*s}  ${50+c*r+c*s} l ${c*l} ${c*l} M ${50}  ${50+r+s} l ${0} ${l} M ${50-c*r -c*s}  ${50+ c*r + c*s } l ${-c*l} ${c*l} M ${50-r-s} ${50} l ${-l} ${0} M ${50-c*r-c*s}  ${50-c*r-c*s} l ${-l*c} ${-l*c}`} strokeWidth=\"5\" stroke=\"#343434\"/>\n \n            </Svg> \n\n        </View>\n    )\n\n}\n\n\nexport const Moon = (props) => {\n\n    return (\n        <View style={[SvgStyles.container, {height: props.height, width: props.width}]}>\n            <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                <Path \n                    d={`M 80 70 A 40 40 0 1 1 80 30 A 30 30 0 1 0 80 70`}\n                    strokeWidth=\"5\"\n                    stroke=\"#343434\"\n                    fill={props.fill ? \"#eaeaea\" : \"none\"}\n                />\n            </Svg> \n        </View>\n    )\n}\n\nexport const Magnifier = (props) => {\n\n    const m = 5 ; \n    const r = 35 ;\n    const c = Math.sqrt(2)/2 ; \n    const strokeWidth = \"5\";\n    const handleStrokeWidth = \"10\"\n    const strokeColor = props.disabled ? colors[props.theme].disabled : colors[props.theme].border ; \n\n    return (\n        <View style={[SvgStyles.container, {height: props.height, width: props.width}]}>\n            <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                <Circle cx={`${r+m}`}\n                        cy={`${r+m}`}\n                        r ={r.toString()}\n                        fill=\"none\"\n                        strokeWidth={strokeWidth}\n                        stroke={strokeColor}/>\n                <Path \n                    d = {`M ${(m+(1+c)*r)} ${m+(1+c)*r} L ${100 - m} ${100 - m} `} \n                    strokeWidth={handleStrokeWidth}\n                    stroke={strokeColor}\n                    />\n            </Svg>\n        </View>\n    )\n} ;\n\nMagnifier.defaultProps = {\n    active: false,\n    theme: 'light',\n}\n\nexport const Mail = (props) => {\n\n    const m = 20 ; \n    const w = 5 ;\n\n    return (\n        <View style={[SvgStyles.container, {height: props.height, width: props.width}]}>\n            <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                <Path d = {`M ${w} ${w+m} L ${100-w} ${w+m} L ${100-w} ${100-w-m} L ${w} ${100-w-m} Z L 50 50 L ${100-w} ${w+m}`}/>\n\n            </Svg>\n        </View>\n    )\n\n}\n\nexport const Menu = (props) => {\n    const [highlight, setHighlight] = useState(false) ; \n\n    const m = 20 ; \n    const w = 10 ;\n    const vs = (100 - 2*m - 3*w)/2 ;\n    const vh = 10 ;  \n\n    return (\n        <Pressable \n            onPress={()=> props.onPressHandler() }\n            onPressIn={()=>setHighlight(true)}\n            onPressOut={()=>setHighlight(false)}\n            style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            <Hoverable>\n            {hover => (\n            <View style={[SvgStyles.container, \n                {height: props.height, \n                width: props.width, \n                backgroundColor: hover || highlight ? colors[props.theme].linkActive : colors[props.theme].fillAreaColor,\n                }]}>\n                <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n                    <Path d = {`M ${vh} ${m} l ${100-2*vh} 0 M ${vh} ${m+vs+w} l ${100-2*vh} 0 M ${vh} ${m+2*(vs+w)} l ${100-2*vh} 0`}\n                        strokeWidth= {w}\n                        stroke={colors[props.theme].primary}\n                        fill=\"none\"\n                    />\n                </Svg>\n            </View>\n            )}\n            </Hoverable>\n        </Pressable> \n    )\n\n}","import React from 'react' ;\nimport {View, Button, TouchableHighlight} from 'react-native' ;  \nimport {colors} from \"../theme/Colors\"; \nimport {useNavigation} from \"@react-navigation/native\"\nimport {navigationRef, toggleDrawer, navigate} from \"./RootNavigation\" ; \nimport {ImageButton} from \"../components/ImageButton\" ; \nimport {Logo, Sun, Moon, Menu} from \"../components/Svgs\" ; \nimport {RootStoreContext} from \"../env\" ;\nimport Hoverable from \"../components/Hoverable\" ;\nimport { useContext } from 'react';\nimport { PropTypes } from 'mobx-react';\n\nconst drawerPic = require(\"../assets/images/drawer_pic.png\") ; \n\nexport const Appbar = ()=>{\n    const rootStore = useContext(RootStoreContext) ; \n\n    return <View style={{\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        backgroundColor: colors[rootStore.theme].fillAreaColor,\n        borderBottomColor: colors[rootStore.theme].primaryTextColor,\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        maxHeight: 50, \n        padding: 10,\n    }}>      \n        <View style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n        }}> \n            {/* <ImageButton buttImage={drawerPic} onPressHandler={toggleDrawer} backgroundColor={colors[rootStore.theme].fillAreaColor} accessibilityRole='menu' accessibilityLabel='Menu'/> */}\n            <Menu onPressHandler={toggleDrawer} height={30} width={30} theme={rootStore.theme}/>\n            <Logo width={60} height={60} /> \n        </View> \n\n        <TouchableHighlight onPress={() => rootStore.toggleColor()}>\n            <Hoverable> \n                {(hover) => (\n                <View style={{\n                    width: 30,\n                    height: 30,\n                }}>\n                    { rootStore.theme == \"dark\" ? \n                        <Sun fill={hover}/>\n                    : \n                        <Moon fill={hover}/>\n                    }\n\n                </View>\n                )}\n            </Hoverable>\n        </TouchableHighlight>\n\n    </View>\n}","import React, {useContext} from \"react\" ; \nimport {View, Platform} from \"react-native\" ; \nimport {generalStyles, RootStoreContext} from \"../env\" ; \nimport {colors} from \"../theme/Colors\" ; \nimport {ImageButton} from \"../components/ImageButton\" ; \nimport {SText, StyledMD} from \"../components/Text\" ;\nimport { Logo } from \"./Svgs\";\n\nexport const Footer = (props) => {\n    const rootStore = useContext(RootStoreContext) ; \n    const date = new Date() \n    const info = require(\"../env.json\") ; \n\n    return (\n        <View style={[{\n            flex: 1,\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderTopColor: colors[rootStore.theme].border, \n            borderTopWidth: 1,\n            //flexWrap: \"wrap\",\n            backgroundColor: colors[rootStore.theme].fillAreaColor,\n            minHeight: 150,\n        }]}>\n            <Logo height={40} width={40}/> \n            <SText style={{color: colors[rootStore.theme].primaryTextColor}}> Copyright © 2020-{date.getFullYear().toString()}, Made by Parsa </SText>\n            <View style={\n                {flexDirection: 'row', \n                 justifyContent: 'center', \n                 alignItems:'center',\n                 flexWrap: 'wrap',\n                }\n            }>\n                <SText style={{color: colors[rootStore.theme].primaryTextColor}}>Source available at </SText>\n                <ImageButton buttImage={require(\"../assets/images/github.png\")} width={20} height={20} onPressHandler={()=>{\n                    if(Platform.OS == 'web'){\n                        if(window){window.open(\"https://github.com/parsa-ra\") ;} \n                    }\n                }}/>\n                <SText style={{color: colors[rootStore.theme].primaryTextColor}}>do whatever you like with it XD ... </SText>\n            </View>\n            <SText style={{\n                color: colors[rootStore.theme].border\n            }}>\n                Updated at {info.lastModifiedDate} \n            </SText>\n\n        </View>\n    )\n}","import {types} from  \"mobx-state-tree\" ;\n\nexport const RootStore = types.model({\n    navStack: types.string,\n    width: types.number,\n    height: types.number,\n    drawerType: types.string,\n    theme: types.union(types.literal('light'), types.literal('dark')),\n    keyboardHidden: types.boolean,\n}).actions((self)=>{\n    return {\n        setNavStack(screen) {\n            self.navStack = screen ; \n        },\n        toggleDrawerType() {\n            if(self.drawerType == 'permanent'){\n                self.drawerType = 'front' ;\n            }else{\n                self.drawerType = 'permanent' ;\n            }\n        },\n        setDrawerType(type){\n            self.drawerType = type ; \n        },\n        toggleColor(){\n            if(self.theme == \"dark\") {\n                self.theme = \"light\" ; \n            }else {\n                self.theme = \"dark\" ; \n            }\n        },\n        setDims(width, height){\n            self.width = width ; \n            self.height = height ; \n            if(self.keyboardHidden) {\n                if(height/width > 1.0){\n                    self.drawerType = 'front' ; \n                }else{\n                    self.drawerType = 'permanent' ; \n                }\n            }\n        },\n        setKeyboardState(state){\n            self.keyboardState = state ; \n        }\n    }\n}).views((self)=>{\n    return {\n        get test(){\n            return 0 ;\n        },\n        get portrait(){\n            if(self.width / self.height < 1) {\n                return true;\n            }else {\n                return false;\n            }\n        }\n    }\n}) ; ","import React from \"react\" ; \nimport {View,Button, StyleSheet, SafeAreaView, ScrollView, Image} from \"react-native\";\nimport {SText, StyledMD} from \"../components/Text\" ; \nimport {observer} from \"mobx-react-lite\" ; \n//import {rootStore} from \"../App\" ; \nimport {RootStoreContext, generalStyles} from \"../env\" ; \nimport { useContext } from \"react\";\nimport {colors} from \"../theme/Colors\" ; \nimport {Footer} from \"../components/Footer\" ; \n\nconst env = require(\"../env.json\")\n\nconst HomeHeaderMD = \n`\n# Welcome\nI'm parsa rahimi, a researcher and developer in area of Artificial Intelligence, Computer Vision Perception, Dapps and Dynamic Networks. \nFor more information follow up in [About](${env.domain}en/about), [Skills](${env.domain}en/skills) and [Publications](${env.domain}/en/publications).\n\n`\n\nconst HomeContent = \n`\n## Introduction\n---\nRecently I received my M.Sc degree in EE from Sharif University of Technology supervised by [Dr. Arash Amini](http://sharif.ir/~aamini/). Currently I am looking for PHD positions mainly in Computer perception and AI.\n\n\n\n## Interests \n---\nHere you can find my main research interests.\n\n* ### Automated Learning: AutoML, DARTS, ...\n\nI think adaptable and automated neural network will be one of the key ingredients to true AI)\n\n* ### Computational Systems (e.g. Computational Photography, Computational Dynamic Modeling, ...) \n\nTo better perceive and control our environment using building blocks that we have (i.e. computers).\n\n\n` ; \n\n\nexport const Home = observer(({navigation})=> {\n    const rootStore = useContext(RootStoreContext) ;\n\n    return (\n    <ScrollView contentInsetAdjustmentBehavior=\"automatic\"\n          contentContainerStyle={[generalStyles.scrollView]}>\n        <View style={[\n            {\n                alignSelf: 'center',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                width: rootStore.portrait ? \"100%\" : \"80%\",\n                flex: 1,\n                backgroundColor: colors[rootStore.theme].fillAreaColor,\n                paddingRight: 0,\n                paddingTop: 0,\n            }, generalStyles.screenContainer]\n        }>\n            \n        {/* <Button title=\"About\" onPress={()=>{rootStore.setNavStack(\"About\"); \n                                            navigation.navigate(\"About\");}}/>\n        <Button title=\"Drawer\" onPress={()=> navigation.toggleDrawer()}/> */}\n\n        <View style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            flex: 1,\n            width: \"100%\",\n        }}>\n\n            <View style={{\n                flex:3,\n                padding: rootStore.portrait ? 20 : 40,\n            }}>\n                <StyledMD theme={rootStore.theme}>\n                    {HomeHeaderMD}\n                </StyledMD>\n            </View>\n\n            <View style={{\n                flex:1,\n                //backgroundColor: colors[rootStore.theme].primary,\n                paddingLeft: rootStore.portrait ? 10 : 20,\n                paddingRight: rootStore.portrait ? 10 : 20,\n                borderTopRightRadius: 5,\n                borderLeftWidth: 1,\n                borderLeftColor: colors[rootStore.theme].border,\n                alignItems: 'center',\n                flexDirection: 'row',\n                justifyContent: 'center',\n            }}>\n                <Image source={require(\"../assets/images/mypic.jpeg\")} style={{width: \"100%\", height: \"100%\", borderRadius: 10}} resizeMode='contain'/>\n            </View>\n\n        </View>\n\n        <View style={{\n            padding: 10,\n        }}>\n        <StyledMD theme={rootStore.theme}>\n            {HomeContent} \n        </StyledMD>\n        </View>\n\n        </View>\n\n        <Footer/>\n    </ScrollView>\n    )\n}) ; ","import React, {useContext} from \"react\" ; \nimport {View, ScrollView, ActivityIndicator} from \"react-native\" ;\nimport {observer} from \"mobx-react-lite\"\nimport {SText, StyledMD} from \"../components/Text\" ; \nimport {Footer} from \"../components/Footer\" ;\nimport {colors} from \"../theme/Colors\" ;\nimport {generalStyles, RootStoreContext} from \"../env\" ; \nimport { useEffect, useState } from \"react\";\n\n\nexport const About = observer((props)=>{\n    const rootStore = useContext(RootStoreContext) ; \n    let aboutMD = require('./MDs/About.md') ; \n    const [text1, setText1] = useState(null); \n\n    useEffect(()=> {\n        fetch(aboutMD).then((res)=>{\n            return res.text() ; \n        }).then(text=>{ \n            setText1(text) ;\n        })\n    }, [])\n\n    return (\n    <ScrollView contentInsetAdjustmentBehavior=\"automatic\" \n          contentContainerStyle={[generalStyles.scrollView]}>\n    <View style={[{\n        alignSelf: 'center',\n        alignItems: 'stretch',\n        justifyContent: 'flex-start',\n        width: rootStore.portrait ? \"100%\" : \"80%\",\n        backgroundColor: colors[rootStore.theme].fillAreaColor,\n    }, generalStyles.screenContainer]}>\n        {text1 == null ?  \n            <ActivityIndicator/>\n        :\n            <StyledMD theme={rootStore.theme}>\n                {text1} \n            </StyledMD> \n        }\n        {/* <Button title=\"Home\" onPress={()=>{\n                              rootStore.setNavStack(\"Home\"); \n                              props.navigation.navigate(\"Home\") ; }}/> */}\n\n        \n    </View>\n\n    <Footer /> \n    </ScrollView>)\n})","import React, {useState, useContext, useRef} from \"react\" ; \nimport {View, StyleSheet, VirtualizedList, FlatList, TouchableHighlight, ScrollView} from \"react-native\" ; \nimport {observer} from \"mobx-react-lite\"\nimport {Svg} from \"react-native-svg\" ; \nimport {RootStoreContext, generalStyles} from \"../env\" ; \nimport {colors} from \"../theme/Colors\" ; \nimport {SText, StyledMD} from \"../components/Text\" ; \nimport {DropDownIndicator} from \"../components/Svgs\" ; \nimport { useCallback } from \"react\";\nimport { Footer } from \"../components/Footer\";\n\nconst Freshness = {\n    'High':   {val: 0},\n    'Medium': {val: 1},\n    'Low':    {val: 2},\n}\n\nconst Level = {\n    'Beginner': {val: 0},\n    'Mediocre': {val: 1},\n    'Pro':      {val: 2},\n}\n\nconst parseDataToArrayLike = (data) => {\n    var arrayLike = [] ;\n\n    var sections = Object.keys(data)\n    for(var sectionIdx in sections) {\n        var newSection = {\n            title: sections[sectionIdx]   \n        }\n        var dataArray = [] ;\n        var skills = Object.keys(data[sections[sectionIdx]])\n        for(var skillIdx in skills) {\n            var dataObject = {} ; \n            dataObject[\"title\"] = skills[skillIdx] ;\n            dataObject[\"data\"] = data[sections[sectionIdx]][skills[skillIdx]]  ; \n            dataArray.push(dataObject) ; \n        }\n        \n        newSection[\"data\"] = dataArray ; \n        arrayLike.push(newSection) ; \n    }\n\n    return arrayLike ; \n}\n\nconst SkillsScreenHeaderMD = `\n# Skills\n---\n\nHere you can find some of the major skills that I've learned through out my years of experience in industry and academia. Each skill is labeled by it's freshness in my mind and also my proficiency level at that skill.\n\n`\n\nconst Data= {\n    'Programming Languages':{\n        'C++':{\n            freshness: 'high',\n            level: 'pro',\n            addInfo: 'Used every where, UnrealEngine developing, playing around with FPrime writing native modules for android',\n        },\n        'C':{\n            freshness: 'high',\n            level: 'pro',\n            addInfo: 'mostly for embedded programming like ESP32 and a bit of socket programming'\n        },\n        'C#':{\n            freshness: 'high',\n            level: 'mediocre',\n            addInfo: 'In conjunction with unity'\n        },\n        'Python': {\n            freshness: 'high',\n            level: 'pro',\n            addInfo: 'Django, TensorFlow, PyTorch, ... ',\n        },\n        'Java': {\n            freshness: 'high',\n            level: 'pro',\n            addInfo: 'used in projects involving Android, Hadoop, ...'\n        },\n        'Rust': {\n            freshness: 'medium',\n            level: 'mediocre',\n            addInfo: 'use for lightning-fast Actix web-framework',\n        },\n        'JavaScript': {\n            freshness: 'high', \n            level: 'pro',\n            addInfo: 'Every where, Node, React, React-Native, Expo, bare-WebAPI, ... '\n        },\n        'ShaderLanguages': {\n            freshness: 'high',\n            level: 'mediocre',\n            addInfo: 'Mostly OpenGL/OpenGL ES',\n        },\n        'VHDL': {\n            title: 'VHDL',\n            freshness: 'low',\n            level: 'mediocre',\n            addInfo: \"Used primary to implement algorithms such as FFT onto FPGAs\",\n        }\n    },\n    'Software Development': {\n        'Web-Services': {\n            freshness: 'high',\n            level: 'pro',\n            addInfo: `Fullstack SaaS design and developments, PWAs`,\n        },\n        'Game-Development': {\n            freshness: 'high',\n            level: 'mediocre',\n            addInfo: \"Game-development using Unity, Unreal-Engine or W/O any engine at all from bare Shader programming\"\n        },\n        \"Embedded Systems\": {\n            freshness: 'low',\n            level: 'mediocre',\n            addInfo: `Most 90s kids start they programming experience with micro-controller programming in [Atmel](https://microchip.com) area, my passion for embedded systems still to date continues and evolved to using [RTOS](https://www.freertos.org/about-RTOS.html)`\n        },\n        \"DApps\" : {\n            freshness: 'medium',\n            level: 'medium',\n            addInfo: \"Developing prototype apps on etheruem's test net\",\n        },\n        \"Cross-Platform Software Development\": {\n            freshness: 'low',\n            level: 'medium',\n            addInfo: `Developing cross-platform apps using Qt`\n        } \n     },\n     'General Software Skills': {\n         'Version Control Systems': {\n             freshness: 'high',\n             level: 'medium',\n             addInfo: 'Working with Git on daily basis'\n         },\n         'Build Systems':{\n             freshness: 'high',\n             level: 'medium',\n             addInfo: 'Familiar with [Cmake](https://cmake.org), [Gradle](https://gradle.org), and a bit of [Bazel](https://bazel.build)'\n         }\n     }\n}\n\nconst parsedData = parseDataToArrayLike(Data) ; \n\n\nconst styles = StyleSheet.create({\n    \n}) ;\n\nconst SkillCard = observer((props) => {\n \n    return <View style={[{\n        flex: 1,\n        border: 5,\n        margin: 5,\n        padding: 5,\n    },{...props.style}]}>\n        <View style={{\n            padding: 0,\n            borderBottomColor: props.borderColor,\n            borderBottomWidth: 1,\n            flex: 1,\n            flexDirection: \"row\",\n        }}>\n            <SText style={{fontSize: 20, color: colors[props.theme].primaryTextColor}}>\n                {props.title}\n            </SText>\n        </View>\n        <View style={{\n            flex: 1,\n            flexDirection: 'row',\n        }}>\n        <View style={{flex:3}}>\n            <StyledMD theme={props.theme}>\n                {props.data.addInfo}    \n            </StyledMD>\n        </View>\n\n        <View style={{\n            flex: 1,\n            borderLeftColor: colors[props.theme].border,\n            borderLeftWidth: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n        }}>\n            <SText style={{fontSize: 14, color: colors[props.theme].primaryTextColor}}>\n                Freshness: {props.data.freshness}\n            </SText>\n            <SText style={{fontSize: 14, color: colors[props.theme].primaryTextColor}}>\n                Level: {props.data.level}\n            </SText>\n        </View>\n\n        </View> \n\n    </View>\n}) ;\n\nSkillCard.defaultProps = {\n    borderColor: colors['light'].border ,\n}\n\nconst _getItemDetails = (data, index) => {\n    const title = Object.keys(data)[index] ; \n    return {\n        title: title,\n        data: data[title],\n    };\n}\n\nexport const SectionContainer = observer((props) => {\n    const [opened, setOpened] = useState(true) ;\n    const rootStore = useContext(RootStoreContext) ;\n    \n    const setOpenedCallBack = useCallback(val => {\n        setOpened(val) ;\n    }, [setOpened]) ; \n\n    return (\n        <View style={{\n            flex: 1,\n            padding: 5,\n            border: 5,\n        }\n        }>\n        <View style={{\n            borderBottomWidth : 1,\n            borderBottomColor: colors[rootStore.theme].border,\n            padding: 0,\n            flex: 1,\n        }}>\n            <TouchableHighlight style={{}} onPress={\n                ()=> {\n                    setOpened(!opened) ;\n                }} underlayColor={props.underlayColor}>\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    padding: 2,\n                    flex: 1,\n                    borderBottomWidth: opened ? 1 : 0,\n                    borderColor: colors['light'].border,\n                }}>\n                    <SText style={{fontSize: 25, color: colors[rootStore.theme].primaryTextColor}}> {props.title} </SText>\n                    <DropDownIndicator height={20} pressHandler={setOpenedCallBack} opened={opened} theme={rootStore.theme}/>\n                </View>\n            </TouchableHighlight>\n\n            {opened ? \n            <View style={{\n                padding: 10,\n                borderLeftColor: colors[rootStore.theme].border,\n                marginBottom: 10,\n                marginTop: 10,\n                marginLeft: 10,\n                borderLeftWidth: 5\n            }}>\n\n                {/* <FlatList \n                    data={props.data}\n                    renderItem={({item}) => {\n                        return <SkillCard title={item.title} data={item.data}/> \n                    }}\n                    keyExtractor={(item) => item.title}\n                /> */}\n\n                {\n                    props.data.map((item) => \n                        <SkillCard key={item.title} title={item.title} data={item.data} theme={rootStore.theme}/>\n                    )\n                }\n                \n            </View> : null }\n        </View>\n    </View> )\n});\n\nSectionContainer.defaultProps = {\n    underlayColor: \"#eaeaeaff\",\n    title: \"none\"\n}\n\nexport const SkillFlexController = (props) => {\n\n    return <View style={{\n\n    }}>\n\n    </View>\n}\n\nconst _renderItem = ({item}) => {\n    //console.log(item) ;\n    return <SectionContainer title={item.title} data={item.data}/>\n} \n\nexport const Skills = observer((props) => {\n    const rootStore = useContext(RootStoreContext) ; \n\n    return (\n    <ScrollView contentInsetAdjustmentBehavior=\"automatic\"\n        contentContainerStyle={[generalStyles.scrollView]}>\n    <View style={[{\n        flexDirection: 'column',\n        alignSelf: 'center',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        backgroundColor: colors[rootStore.theme].fillAreaColor,\n        width: rootStore.portrait ? '100%' : '70%', \n        padding: 10,\n    }, generalStyles.screenContainer]}>\n\n        <StyledMD theme={rootStore.theme}>\n            {SkillsScreenHeaderMD}\n        </StyledMD>\n\n        <FlatList \n            data={parsedData}\n            renderItem={_renderItem}\n            keyExtractor={ item => item.title }\n            theme={rootStore.them}\n        />\n\n    </View>\n\n    <Footer/>\n    </ScrollView>)\n}) ;\n","import React, {useContext, useState, useRef} from \"react\" ; \nimport {View, ScrollView, TouchableHighlight, TextInput, Pressable} from \"react-native\" ;\nimport {observer} from \"mobx-react-lite\"\nimport {SText, StyledMD} from \"../components/Text\" ; \nimport {ImageButton} from \"../components/ImageButton\" ; \nimport {colors} from \"../theme/Colors\" ;\nimport {generalStyles, RootStoreContext} from \"../env\" ; \nimport { Footer } from \"../components/Footer\";\nimport {DropDownIndicator, Magnifier} from \"../components/Svgs\" ;\nimport { useEffect } from \"react\";\nimport { Video } from \"expo-av\";\n\nconst PublicationScreenHeader = \n`# Publications\n---\n\nIn middle of standing on the shoulder of giants ... \n\n`;\n\n\nconst PublicationArray = [\n    {\n        title: 'ICCV 2021 Submission',\n        pdf: 'none',\n        bib: 'none', \n        description: `In this article we propose an effective yet efficient differentiable computational graph to stabilize videos captured in devices equipped with gyroscope. here you can see an example output of our algorithm.`,\n        videoSource: `https://parano.arvanvod.com/V6jkaZoDwZ/EKg1kd2Nx6/origin_FsWCEgGQYiGE4NxWn70miVWv4qcgpk9gtzpGbesz.mp4`,\n\n    },\n] ; \n\nconst SearchBar = (props) => {\n    const rootStore = useContext(RootStoreContext) ;\n    const [focused, setFocused] = useState(false);\n    const textInputRef = useRef(null) ;\n\n\n    return <Pressable\n        onPress={()=> {if(textInputRef.current != null) {textInputRef.current.focus();}}}\n        disabled={props.disabled}\n    >\n        <View style={{\n            flexDirection: 'row',\n            padding: 10,\n            borderWidth: 1,\n            borderRadius: 2,\n            borderColor: props.disabled ? colors[rootStore.theme].disabled : colors[rootStore.theme].border,\n            justifyContent: 'center',\n            alignItems: 'center',\n            margin: 10,\n        }}\n        pointerEvents={props.disabled ? \"none\" : \"auto\"}\n        >\n            <Magnifier height={30} width={30} disabled={props.disabled} theme={rootStore.theme}/> \n\n            <TextInput\n                ref={textInputRef}\n                placeholder= {`Search in Articles ${props.disabled ? \"(Disabled)\" : \"\"}`}\n                placeholderTextColor={props.disabled ? colors[rootStore.theme].disabled : colors[rootStore.theme].border }\n            />\n        </View> \n    </Pressable>\n}   \n\n\nconst PublicationCard = (props) => {\n    const [isOpened, setIsOpened] = useState(true) ;\n    const video  = useRef(null) ;\n    const [videoStatus, setVideoStatus] = useState({}) ; \n    \n    return (\n        <View style={{\n            margin: 5,\n            border: 5,\n            backgroundColor: colors[props.theme].fillAreaColor,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            padding: 10,\n        }}>\n            <TouchableHighlight onPress={()=>setIsOpened(!isOpened)} underlayColor={colors[props.theme].border}>\n            <View style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                borderBottomWidth: 1,\n                borderBottomColor: colors[props.theme].border, \n                paddingRight: 10,\n                paddingLeft: 10,\n            }}>\n                <SText style={{\n                    fontWeight: \"600\",\n                    fontSize: 20,\n                    paddingTop: 20,\n                    paddingBottom: 20,\n                    color: colors[props.theme].secondaryTextColor,\n                }}> {props.title} </SText> \n\n                <DropDownIndicator opened={isOpened} height={20} width={20} theme={props.theme}/>        \n            </View>\n            </TouchableHighlight>\n                \n            {isOpened ? <View style={\n                {}\n            }>\n\n                <View style={{flexDirection: 'row'}}>\n                    <View style={{\n                        flex: 3,\n                        padding: 10,\n                    }\n                    }>\n                        <StyledMD theme={props.theme}>\n                            {props.description}\n                        </StyledMD> \n                    </View>\n\n                    <View style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        padding: 10,\n                        borderLeftColor: colors[props.theme].border,\n                        borderLeftWidth: 1,\n                    }}>\n                    <ImageButton buttText=\"Download PDF\" disabled={props.pdf == 'none' ? true : false}\n                            viewStyle={{borderWidth: 1, margin: 5, flex:1, width: \"100%\", justifyContent: 'center'}} theme={props.theme}/>\n                    <ImageButton buttText=\"Copy BibTex\" disabled={props.bib == 'none' ? true : false} \n                            viewStyle={{borderWidth: 1, margin: 5, flex:1, width: \"100%\", justifyContent: 'center'}} theme={props.theme}/>\n\n                    </View>\n                </View> \n\n                {/* {\n                    props.vids != 'none' ? props.vids.map(\n                        (item) => {\n                            return(\n                                <Video \n                                    key = {item}\n                                    ref = {video}\n                                    source= {require(item)}\n                                    useNativeControls\n                                    resizeMode=\"contain\"\n                                    isLooping={false}\n                                    onError={(err) => console.log(err) }\n\n                                />\n                            )\n                        }\n                    ) : null \n                } */}\n\n                {\n                    props.videoSource != 'none' \n                    ?\n                    <Video \n                            ref = {video}\n                            source= {props.videoSource}\n                            useNativeControls\n                            resizeMode=\"contain\"\n                            isLooping={false}\n                            onError={err => console.error(err) }\n                            //onPlaybackStatusUpdate={status => console.log(status)}\n                        />\n                    : \n                    null\n                }   \n\n            </View> : null }\n\n        </View>\n    )\n};\n\nPublicationCard.defaultProps = {\n    theme: 'light',\n    title: 'none',\n    pdf: 'none',\n    description: 'none',\n    bib: 'none',\n    vids: 'none',\n    videoSource: 'none',\n}\n\n\nexport const Publications = observer((props) => {\n    const rootStore = useContext(RootStoreContext) ; \n\n    return (\n        <ScrollView contentInsetAdjustmentBehavior=\"automatic\"\n        contentContainerStyle={[generalStyles.scrollView]}>\n        <View style={[{\n            alignSelf: 'center',\n            alignItems: 'stretch',\n            justifyContent: 'flex-start',\n            width: rootStore.portrait ? \"100%\" : \"80%\",\n            backgroundColor: colors[rootStore.theme].fillAreaColor,\n        }, generalStyles.screenContainer]}>\n            <StyledMD theme={rootStore.theme}>\n                {PublicationScreenHeader}\n            </StyledMD>\n\n            <SearchBar disabled={true}/> \n\n            <ScrollView> \n                {PublicationArray.map((item) => {\n\n                    return <PublicationCard title={item.title} description={item.description} theme={rootStore.theme} key={item.title} pdf={item.pdf} bib={item.bib} videoSource={item.videoSource}/>\n                })}\n            </ScrollView>\n\n        </View>\n        <Footer/>\n        </ScrollView>\n    )\n}) ","import React, {useContext, useState, useEffect} from \"react\" ; \nimport {View, ScrollView, Pressable, Image, Platform, Linking} from \"react-native\" ;\nimport {observer} from \"mobx-react-lite\"\nimport {SText, StyledMD} from \"../components/Text\" ; \nimport {colors} from \"../theme/Colors\" ;\nimport {generalStyles, RootStoreContext} from \"../env\" ; \nimport {Footer} from \"../components/Footer\" ; \nimport {Mail} from \"../components/Svgs\" ;\nimport Clipboard from \"expo-clipboard\" ;\nimport Hoverable from \"../components/Hoverable\" ;\n\nconst contactMD = `# Contact\n---\n\nThe ways to contact or follow me ...  \n`\n\nconst ContactMethod = [\n    {\n        title: 'Twitter',\n        icon: require('../assets/images/twitter.png'),\n        data: ['https://twitter.com/_Parano_'] ,\n        role: 'link',\n        color: ' #1da1f2'\n    },\n    {\n        title: 'Mail',\n        icon: require('../assets/images/mail.png'),\n        data: ['mailto:parsa.rahimi.n@gmail.com'],\n        role: 'link', \n        color: '#dedede'\n    },\n    {\n        title: 'Github',\n        icon: require('../assets/images/github.png'),\n        data: ['https://github.com/parsa-ra'],\n        role: 'link',\n        color: '#121212'\n    },\n    {\n        title: 'Stackoverflow',\n        icon: require(\"../assets/images/stack.png\"),\n        data: ['https://stackoverflow.com/users/11441126/parsa-noshafagh'],\n        role: 'link',\n        color: '#F48024'\n    },\n    {\n        title: 'LinkedIn',\n        icon: require(\"../assets/images/linkedin.png\"),\n        data: ['https://www.linkedin.com/in/parsa-rahimi-02400514b'],\n        role: 'link',\n        color: '#0077b5',\n    },\n    {\n        title: 'Spotify',\n        icon: require(\"../assets/images/spotify.png\"),\n        data: [\"https://open.spotify.com/user/1nbzchhkj44xayshrbv236nkg?si=giEnbX-XQCGdWZ_JV6zBOQ\"],\n        role: 'link',\n        color: '#1db954',\n    }\n]\n\nconst ContactItem = (props)=>{\n    const [pressedIn, setPressedIn] = useState(false) ;\n\n\n    return (\n    <Pressable onPress={()=>{\n        if(Platform.OS == 'web'){\n            window.open(props.data[0]) ; \n            // Clipboard.setString(props.data[0]) ; \n        }\n    }} \n    onPressIn={()=>setPressedIn(true)} \n    onPressOut={()=>setPressedIn(false)}\n    accessibilityRole='link'>\n        <Hoverable >\n            {\n            hover => {\n                return <View style={{}}>\n                    <Image source={props.source} style={{width: 50, height: 50, tintColor:(hover || pressedIn) ? props.color : colors[props.theme].primaryTextColor}} resizeMode='contain' />\n                </View>\n            }}\n        </Hoverable>\n    </Pressable>\n    \n    )\n\n};\n\nexport const Contact = observer((props)=>{\n    const rootStore = useContext(RootStoreContext) ; \n\n    return (\n    <ScrollView contentInsetAdjustmentBehavior=\"automatic\"\n        contentContainerStyle={[generalStyles.scrollView]}>\n    <View style={[{\n        alignSelf: 'center',\n        alignItems: 'stretch',\n        justifyContent: 'flex-start',\n        width: rootStore.portrait ? \"100%\" : \"80%\",\n        backgroundColor: colors[rootStore.theme].fillAreaColor,\n    }, generalStyles.screenContainer]}>\n\n        <View>\n        <StyledMD theme={rootStore.theme}>\n            {contactMD} \n        </StyledMD>\n        </View >\n        {/* <Button title=\"Home\" onPress={()=>{\n                              rootStore.setNavStack(\"Home\"); \n                              props.navigation.navigate(\"Home\") ; }}/> */}\n\n        <View style={{\n            flexDirection: 'row',\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            padding: 20,\n        }}>\n            {\n                ContactMethod.map((item => <ContactItem key={item.title} source={item.icon} color={item.color} data={item.data} theme={rootStore.theme}/> ))\n            }\n        </View>\n        \n    </View>\n    \n    <Footer />\n    </ScrollView>)\n})","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport {Asset} from 'expo-asset' ; \nimport * as Font from \"expo-font\" ; \nimport AppLoading from 'expo-app-loading' ; \nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator, Dimensions, Platform, Keyboard} from 'react-native';\nimport {Appbar} from \"./components/Appbar\" ; \nimport {Footer} from \"./components/Footer\" ;\nimport { observer } from 'mobx-react-lite';\nimport {RootStore} from \"./Stores/RootStore\" ; \nimport {NavigationContainer, DefaultTheme} from \"@react-navigation/native\" ; \nimport {createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem} from \"@react-navigation/drawer\" ; \nimport {Home, About, Skills, Publications, Contact} from \"./Screens\" ;\nimport {isReadyRef, navigationRef} from \"./components/RootNavigation\" ; \nimport {window, screen, RootStoreContext} from \"./env\" ; \nimport {colors} from \"./theme/Colors\" ; \nimport {PinSvg} from \"./components/Svgs\" ; \n\nexport const rootStore = RootStore.create({\n  navStack: \"home\",\n  width: window.width,\n  height: window.height,\n  drawerType: 'front',\n  theme: 'light',\n  keyboardHidden: true,\n}) ; \n\nconst Drawer = createDrawerNavigator() ; \n\nconst DrawerContent = observer((props)=>(\n    <DrawerContentScrollView {...props}>\n      { rootStore.portrait ? null : \n        <DrawerItem  label= {({color, focused}) => (<PinSvg width={30} height={30} pinned={rootStore.drawerType == 'permanent' ? true : false} theme={rootStore.theme}/>)} \n        style={{\n          flexDirection: 'row-reverse',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        onPress={()=>rootStore.toggleDrawerType()}\n      />\n      }\n      <DrawerItemList {...props}/>\n    </DrawerContentScrollView>\n))\n\nconst DrawerNav = observer(()=>(\n  <Drawer.Navigator \n    initialRouteName=\"Home\" \n    screenOptions={{\n      background: colors[rootStore.theme].secondaryFillAreaColor,\n      drawerType: rootStore.drawerType,\n      drawerStyle: {\n        backgroundColor: colors[rootStore.theme].fillAreaColor,\n        width: rootStore.portrait ? \"50%\" : \"20%\"\n      },\n      drawerLabelStyle: {\n        fontFamily: 'Ubuntu',\n        fontSize: 20,\n        color: colors[rootStore.theme].primaryTextColor,\n      },\n      \n      headerShown: false,\n      drawerActiveBackgroundColor: colors[rootStore.theme].drawerActiveColor,\n      drawerInactiveBackgroundColor: colors[rootStore.theme].drawerInactiveColor,\n    }}\n    drawerContent={(props)=>(\n     <DrawerContent {...props} /> \n    )}\n    >\n    <Drawer.Screen name=\"Home\" component={Home}  />\n    <Drawer.Screen name=\"About\" component={About} />\n    <Drawer.Screen name=\"Skills\" component={Skills} />\n    <Drawer.Screen name=\"Publications\" component={Publications} /> \n    <Drawer.Screen name=\"Contact\" component={Contact} />\n  </Drawer.Navigator>\n))\n\n\n export const App = observer(() => {\n  const [loadingDone, setLoadingDone] = useState(false) ;\n  var navTheme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme,\n      background: colors[rootStore.theme].secondaryFillAreaColor,\n      primary: colors[rootStore.theme].primary,\n      border: colors[rootStore.theme].border,\n      text: colors[rootStore.theme].primaryContrastTextColor,\n      card: colors[rootStore.theme].fillAreaColor,\n    },\n  };\n  \n  Dimensions.addEventListener('change', ({window, screen})=>{\n    rootStore.setDims(window.width, window.height) ; \n  }) ; \n\n  // Keyboard.addEventListener('keyboardDidShow', ()=>{\n  //   rootStore.setKeyboardState(false) ; \n  // }) ; \n\n  // Keyboard.addEventListener('keyboardDidHide', ()=>{\n  //   rootStore.setKeyboardState(true) ; \n  // })\n\n  useEffect(()=>{\n    //setLoadingDone(true) ; \n    isReadyRef.current = false ; \n    if(!rootStore.portrait){\n      rootStore.setDrawerType('permanent') ; \n    }\n  }, [])\n  \n  useEffect(()=>{\n    navTheme = {\n      ...DefaultTheme,\n      colors: {\n        ...DefaultTheme,\n        background: colors[rootStore.theme].secondaryFillAreaColor,\n        primary: colors[rootStore.theme].primary,\n        border: colors[rootStore.theme].border,\n        text: colors[rootStore.theme].primaryContrastTextColor,\n        card: colors[rootStore.theme].fillAreaColor,\n      },\n    };\n  }, [rootStore.theme])\n\n  const _loadAssets = async()=>{ \n    return Promise.all([\n      Asset.loadAsync([\n        require(\"./assets/images/drawer_pic.png\"),\n        require(\"./assets/images/mypic.jpeg\"),\n      ]),\n      Font.loadAsync({\n        Ubuntu: require(\"./assets/fonts/Ubuntu-Regular.ttf\"),\n      })\n    ]); \n  };\n  \n  const _onApploadingFinish = () => {\n    //console.log(colors[rootStore.theme].primary) ; \n    setLoadingDone(true) ;\n  }\n\n  const _onLoadingError = () => {\n    // Show some error notification stuff\n    setLoadingDone(false) ; \n  }\n\n  return loadingDone ? \n    <RootStoreContext.Provider value={rootStore}>\n      <View style={styles.container}>\n        <NavigationContainer \n          theme={navTheme}\n          linking={{config:{screens:{\n            \"Home\": \"en/home\",\n            \"About\": \"en/about\",\n            \"Skills\": \"en/skills\",\n            \"Publications\": \"en/pubs\",\n            \"Contact\": \"en/contact\",\n          }}}} \n          onReady={()=>{isReadyRef.current = true;}}\n          ref={navigationRef}>\n\n          <Appbar/>\n\n          <DrawerNav />   \n\n        </NavigationContainer>\n        <StatusBar style=\"auto\" />\n      </View>\n    </RootStoreContext.Provider> \n    : <View style={\n      {flexDirection:'column',\n       alignItems: 'center', \n       justifyContent: 'center',\n       flex: 1,\n      }\n    }>\n\n    <ActivityIndicator size=\"large\" color={colors['light'].primary}/>  \n    <AppLoading \n          startAsync= {_loadAssets}\n          onFinish={ _onApploadingFinish } \n          onError={ _onLoadingError }\n      />\n    </View>\n}) ;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors[rootStore.theme].secondaryFillAreaColor,\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport {App} from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}